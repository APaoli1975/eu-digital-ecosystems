---
title: "Digital Tech Ecosystems — Four-City Quant Analysis (Tallinn, Barcelona, Athens, Lisbon)"
format:
  html:
    theme: cosmo
    toc: true
    toc-depth: 2
  pdf:
    toc: true
    number-sections: false
execute:
  echo: false
  warning: false
  message: false
editor: source
params:
  year_min: 2000
  year_max: 2021
  min_completeness: 0.50
  min_years_per_city: 4
---

## 0) Setup & Data

```{r}
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(janitor)
library(scales)
library(ggrepel)
theme_set(theme_minimal())

# Folders
dir.create("outputs", showWarnings = FALSE)
dir.create("figures", showWarnings = FALSE)

# Parameters
year_min <- params$year_min
year_max <- params$year_max
min_comp <- params$min_completeness
min_years <- params$min_years_per_city

# Data file produced by 05_merge_funding.R
fp <- "data_clean/analysis_ready_4cities_with_funding.csv"
if (!file.exists(fp)) {
  cat("❌ File not found:", fp, "\n",
      "→ Run pipeline first:\n",
      "   source('scripts/01_pull_eurostat.R')\n",
      "   source('scripts/02_pull_oecd.R')\n",
      "   source('scripts/03_merge_panel.R')\n",
      "   source('scripts/04_fetch_funding.R')\n",
      "   source('scripts/05_merge_funding.R')\n")
  knitr::knit_exit()
}

dat <- read_csv(fp, show_col_types = FALSE) |> clean_names()

# Standard labels & guardrails
dat <- dat %>%
  mutate(
    city = factor(city, levels = c("Tallinn","Barcelona","Athens","Lisbon")),
    group = case_when(city %in% c("Tallinn","Barcelona") ~ "Success",
                      city %in% c("Athens","Lisbon") ~ "Poor",
                      TRUE ~ "Other"),
    year = suppressWarnings(as.integer(year))
  )

# Keep analysis window
dat_win <- dat %>% filter(year >= year_min, year <= year_max)

cities <- paste(levels(dat$city), collapse = ", ")
yrs <- range(dat_win$year, na.rm = TRUE)
nice_years <- paste(yrs, collapse = "–")
```

**Scope.** Cities covered: `r cities`. Window: `r nice_years`.  
**Outcome indicators available** (long panel):  
- *HighTech_Employment_regional* (level)  
- *HighTech_patents_regional* (level)  
- *GERD_regional* (level)  

**Context (drivers):**
- FUA macro: `gdp`, `empw`, `lab_prod`  
- Funding: `eu_funding`, `funding_to_gdp`, `funding_per_emp`, provenance `funding_geo`, `funding_method` (direct / proxy)

---

## 1) Coverage diagnostics

*Method.* We check completeness by **indicator × city** in the analysis window. This prevents misleading comparisons.

```{r}
cov <- dat_win %>%
  group_by(city, indicator) %>%
  summarise(
    years_total  = n_distinct(year),
    years_non_na = n_distinct(year[!is.na(value)]),
    completeness = ifelse(years_total == 0, NA_real_, years_non_na / years_total),
    .groups = "drop"
  ) %>%
  arrange(indicator, city)

write_csv(cov, "outputs/coverage_by_indicator_city.csv")

p_cov <- cov %>%
  mutate(indicator = factor(indicator)) %>%
  ggplot(aes(x = city, y = completeness, fill = city)) +
  geom_col(width = 0.7) +
  facet_wrap(~ indicator, nrow = 1) +
  scale_y_continuous(labels = percent_format(accuracy = 1)) +
  labs(title = "Coverage by city and indicator (share of non-missing within window)",
       x = NULL, y = "Completeness")
p_cov
ggsave("figures/coverage_by_indicator_city.png", p_cov, width = 10, height = 3.6, dpi = 300)
```

*Takeaway.* We focus on indicators and city-years where coverage is reasonable. Sparse series are discussed descriptively, not used for strict comparisons.

---

## 2) Core outcome series (levels & indexed)

*Method.* For each indicator, we show levels over time, and **indexed paths** (base = first available year in the window for each city) to compare momentum.

```{r}
core_inds <- c("HighTech_Employment_regional", "HighTech_patents_regional", "GERD_regional")
core_long <- dat_win %>%
  filter(indicator %in% core_inds) %>%
  filter(!is.na(value))

# Levels
p_levels <- core_long %>%
  ggplot(aes(year, value, color = city)) +
  geom_line(linewidth = 0.9) + geom_point(size = 1.4) +
  facet_wrap(~ indicator, scales = "free_y") +
  labs(title = "Outcome levels over time",
       x = NULL, y = NULL, color = "City",
       caption = "Eurostat & OECD harmonised panel; author's processing.")
p_levels
ggsave("figures/core_levels.png", p_levels, width = 10, height = 5.6, dpi = 300)

# Indexed (base = first non-missing per city)
core_idx <- core_long %>%
  group_by(city, indicator) %>%
  arrange(year, .by_group = TRUE) %>%
  mutate(base = dplyr::first(value),
         idx  = ifelse(is.finite(base) & base != 0, value / base * 100, NA_real_)) %>%
  ungroup()

p_idx <- core_idx %>%
  ggplot(aes(year, idx, color = city)) +
  geom_line(linewidth = 0.9) + geom_point(size = 1.2) +
  facet_wrap(~ indicator, scales = "free_y") +
  labs(title = "Indexed paths (base = 100 at first available year, per city)",
       x = NULL, y = "Index (base=100)")
p_idx
ggsave("figures/core_indexed.png", p_idx, width = 10, height = 5.6, dpi = 300)
```

*Takeaway.* Indexed paths spotlight **relative momentum**: consistent upward trajectories for “Success” (Tallinn/Barcelona) vs flatter/volatile for “Poor” (Athens/Lisbon), where present.

---

## 3) Success vs Poor — pooled contrasts

*Method.* We define two groups: **Success** = {Tallinn, Barcelona}; **Poor** = {Athens, Lisbon}.  
We pool within group (simple mean across the two cities — keep interpretation cautious) to contrast trajectories.

```{r}
pool <- core_long %>%
  mutate(group = ifelse(city %in% c("Tallinn","Barcelona"), "Success", "Poor")) %>%
  group_by(group, indicator, year) %>%
  summarise(value = mean(value, na.rm = TRUE), .groups = "drop")

p_pool <- pool %>%
  ggplot(aes(year, value, color = group)) +
  geom_line(linewidth = 1.1) + geom_point(size = 1.6) +
  facet_wrap(~ indicator, scales = "free_y") +
  labs(title = "Success vs Poor — pooled averages (mean of two cities per group)",
       x = NULL, y = NULL, color = "Group")
p_pool
ggsave("figures/success_vs_poor_pooled.png", p_pool, width = 10, height = 5.2, dpi = 300)
```

*Takeaway.* As a **compact contrast**, Success tends to outperform Poor in levels and pace in key outcomes, but year-to-year noise remains—hence the need to triangulate with funding and policy timelines.

---

## 4) Funding intensity and provenance (Option A)

*Method.* We use **funding-to-GDP** and **funding-per-employee** (when denominators available) as **intensity** measures.  
We also chart **annual EU payments** per city **directly from the merged panel** (`dat_win`), avoiding column-name mismatches.  
A provenance table (direct vs proxy) is saved for transparency.

```{r}
# (A1) Annual EU payments by city (from merged panel)
funding_year <- dat_win %>%
  distinct(city, year, eu_funding) %>%
  filter(!is.na(eu_funding))

p_funding_amt <- ggplot(funding_year, aes(x = year, y = eu_funding / 1e6, fill = city)) +
  geom_col(position = "dodge") +
  labs(title = "EU annual payments by city",
       x = NULL, y = "EUR (million)", fill = "City") +
  scale_y_continuous(labels = scales::comma)
p_funding_amt
ggsave("figures/funding_annual_payments_by_city.png", p_funding_amt, width = 9.5, height = 4.8, dpi = 300)

# (A2) Time series of funding intensity: funding / GDP (from merged panel)
p_f_int <- dat_win %>%
  ggplot(aes(year, funding_to_gdp, color = city, group = city)) +
  geom_line(linewidth = 0.9, na.rm = TRUE) + geom_point(size = 1.2, na.rm = TRUE) +
  labs(title = "EU funding intensity (funding / GDP)",
       x = NULL, y = "Funding / GDP", color = "City",
       caption = "Funding: Cohesion payments (direct or proxy). GDP: FUA macro. Panel merged with provenance.") 
p_f_int
ggsave("figures/funding_intensity_gdp_ts.png", p_f_int, width = 9.5, height = 4, dpi = 300)

# (A3) Latest-year cross-plot: funding_to_gdp vs labour productivity
latest <- dat_win %>%
  group_by(city) %>%
  filter(year == max(year, na.rm = TRUE)) %>%
  ungroup()

p_f_sc <- latest %>%
  ggplot(aes(funding_to_gdp, lab_prod, label = city, color = city)) +
  geom_point(size = 3) + ggrepel::geom_text_repel(max.overlaps = 100) +
  labs(title = "Funding intensity vs Labour Productivity (latest available year)",
       x = "Funding / GDP", y = "Labour productivity (FUA)")
p_f_sc
ggsave("figures/funding_vs_labprod_scatter.png", p_f_sc, width = 7.2, height = 4.8, dpi = 300)

# (A4) Provenance table (direct/proxy) from merged panel
prov <- dat_win %>%
  select(city, year, funding_geo, funding_method) %>%
  distinct() %>%
  arrange(city, year)
write_csv(prov, "outputs/funding_provenance_table.csv")
head(prov, 12)
```

*Takeaway.* Even where **funding intensity** looks non-trivial for Athens/Lisbon, **outcomes lag** vs Tallinn/Barcelona. This supports the hypothesis: *money alone doesn’t produce a digital tech ecosystem without effective regional policy and implementation capacity*. The provenance notes keep our assumptions transparent (ES51 for Barcelona, EE00 for Tallinn).

---

## 5) City scoreboards (simple & transparent)

*Method.* For a digestible comparison, we build **scoreboards** on the latest overlapping year across cities for each core indicator and two funding intensity measures. Values are **z‑scored** to put different scales side-by-side (mean 0, sd 1 within the four cities).

```{r}
# Pick the latest year with at least 3 non-missing cities for each variable
vars <- c("HighTech_Employment_regional","HighTech_patents_regional","GERD_regional","funding_to_gdp","funding_per_emp")

latest_by_var <- lapply(vars, function(v){
  dv <- if (v %in% c("funding_to_gdp","funding_per_emp")) {
    dat_win %>% select(city, year, !!v := all_of(v)) %>% distinct()
  } else {
    dat_win %>% filter(indicator == v) %>% select(city, year, value) %>% rename(!!v := value)
  }
  yr <- dv %>% group_by(year) %>% summarise(n = sum(!is.na(!!sym(v))), .groups="drop") %>%
    filter(n >= 3) %>% summarise(yr = max(year)) %>% pull(yr)
  if (length(yr) == 0) return(NULL)
  dv %>% filter(year == yr)
})

sb <- Reduce(function(a,b) full_join(a,b, by = c("city","year")), latest_by_var)
sb <- sb %>% filter(!is.na(city)) %>% arrange(city)

# Z-score within the 4 cities per column (where >=3 non-NA)
zcols <- setdiff(names(sb), c("city","year"))
for (zc in zcols) {
  if (sum(!is.na(sb[[zc]])) >= 3) {
    m <- mean(sb[[zc]], na.rm = TRUE); s <- sd(sb[[zc]], na.rm = TRUE)
    sb[[paste0("z_", zc)]] <- ifelse(is.finite(s) & s > 0, (sb[[zc]] - m)/s, NA_real_)
  } else {
    sb[[paste0("z_", zc)]] <- NA_real_
  }
}

write_csv(sb, "outputs/city_scoreboard_latest.csv")
sb
```

*Takeaway.* The z‑score scoreboard helps communicate **which cities lead** on outcomes vs funding intensity in the latest comparable year, without overclaiming causality.

---

## 6) Sensitivity: within‑group contrasts

*Method.* We show **within-group** differences (Barcelona − Tallinn; Athens − Lisbon) for core indicators where overlap exists. This avoids small‑N cross‑group pitfalls.

```{r}
make_diff <- function(c1, c2, ind){
  w <- dat_win %>%
    filter(indicator == ind, city %in% c(c1, c2)) %>%
    select(city, year, value) %>%
    pivot_wider(names_from = city, values_from = value) %>%
    mutate(diff = .data[[c1]] - .data[[c2]])
  w$pair <- paste(c1, "−", c2)
  w$indicator <- ind
  w
}

diff_long <- bind_rows(
  make_diff("Barcelona","Tallinn","HighTech_Employment_regional"),
  make_diff("Barcelona","Tallinn","HighTech_patents_regional"),
  make_diff("Athens","Lisbon","HighTech_Employment_regional"),
  make_diff("Athens","Lisbon","HighTech_patents_regional")
)

p_diff <- diff_long %>%
  ggplot(aes(year, diff)) +
  geom_hline(yintercept = 0, linetype = "dashed") +
  geom_line(linewidth = 0.9, color = "grey30", na.rm = TRUE) +
  geom_point(size = 1.4, color = "grey30", na.rm = TRUE) +
  facet_grid(indicator ~ pair, scales = "free_y") +
  labs(title = "Within-group differences (levels)",
       x = NULL, y = "Difference (first city − second city)")
p_diff
ggsave("figures/within_group_differences.png", p_diff, width = 9.5, height = 5.6, dpi = 300)
```

*Takeaway.* Within “Success” and within “Poor”, differences are smaller and more stable than cross‑group gaps, reinforcing the **group effect** signal.

---

## 7) Synthesis & what it means for policy

**Findings so far (quantitative):**
1. **Outcome levels & indexed momentum** favour **Tallinn/Barcelona** over **Athens/Lisbon** across core indicators (where coverage allows).  
2. **Funding intensity** (funding/GDP; funding/employee) does **not** predict stronger outcomes in **Athens/Lisbon**, supporting the thesis: **access to EU funds ≠ ecosystem performance** without effective regional policy.  
3. **Provenance transparency** (direct vs proxy) ensures our conclusions are not artefacts of data availability.

**What to add next (qualitative cross‑walk):**
- Timeline of **EU + regional policy instruments** per city/region.  
- Coding of **policy quality** (focus, continuity, implementation capacity).  
- Match policy phases to **inflections** in outcome series.

**Reproducibility & exports.**  
- Figures in `figures/` and tables in `outputs/`.  
- Master panel: `data_clean/analysis_ready_4cities_with_funding.csv`.

```{r}
meta <- list(
  timestamp = as.character(Sys.time()),
  params    = list(year_min = year_min, year_max = year_max,
                   min_completeness = min_comp, min_years_per_city = min_years),
  cities    = levels(dat$city),
  indicators_available = sort(unique(dat$indicator))
)
jsonlite::write_json(meta, "outputs/run_metadata.json", auto_unbox = TRUE, pretty = TRUE)
```

